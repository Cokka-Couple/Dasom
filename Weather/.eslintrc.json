{
  //현재 환경을 지정
  "env": {
    // 브라우저 환경에서 실행되는 코드를 대상
    "browser": true,
    // ECMAScript 2021 버전의 기능을 인식
    "es2021": true
  },
  // 기본 설정을 확장(상속)
  "extends": [
    "standard-with-typescript",
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended",
    "prettier"
  ],
  // 특정 파일이나 디렉토리에 대해 다른 규칙을 적용할 때 사용
  "overrides": [],
  // 코드를 파싱하기 위한 파서를 지정
  // @typescript-eslint/parser -> 타입스크립트 코드를 파싱하기 위한 파서
  "parser": "@typescript-eslint/parser",
  // 파서에 대한 추가 옵션을 지정
  "parserOptions": {
    // 사용할 ESMAScript 버전을 지정 "latest"은 최신으로 설정
    "ecmaVersion": "latest",
    // "module" 설정 이는 ES6+ 모듈(import/export)을 사용
    "sourceType": "module"
  },
  // 사용할 추가 플러그인들을 나열
  "plugins": ["react", "@typescript-eslint", "prettier", "import"],
  // 규칙과 관련된 설정
  "rules": {
    // 따옴표를 더블 쿼트로 사용
    "quotes": ["error", "double"],
    // 세미콜론을 항상 사용
    "semi": ["error", "always"],
    // 파일에 반복적으로 가져오기가 없는지 확인
    "no-duplicate-imports": "error",
    // console 사용에 대한 경고를 발생시키지만, "warn", "error", "info" 는 허용
    "no-console": ["warn", { "allow": ["warn", "error", "info"] }],
    // 선언되었지만 어디에도 사용되지 않는 변수를 보고
    "no-unused-vars": "error",
    // 코드에 여러 개의 연속된 빈 줄이 없는지 확인
    "no-multiple-empty-lines": "error",
    // Prettier 규칙에 따라 코드 포맷을 적용
    "prettier/prettier": ["error"],
    // 가져온 모듈 경로를 확인할 수 있는지 확인
    // 'caseSensitive' 옵션은 Linter가 가져오기 경로에서 대소문자 구분을 준수하도록 보장
    "import/no-unresolved": [2, { "caseSensitive": true }]
  },
  // 플러그인이나 ESLint 자체에 대한 추가 설정을 지정
  "settings": {
    "import/resolver": {
      "typescript": {}
    }
  }
}
